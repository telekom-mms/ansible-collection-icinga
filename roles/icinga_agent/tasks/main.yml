---
- name: install specificed icinga version
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop:
    - "{{ icinga_agent_package }}"

- name: create /etc/icinga2/repository.d
  ansible.builtin.file:
    dest: "/etc/icinga2/repository.d"
    mode: 0750
    owner: "{{ icinga2_user[ansible_os_family] }}"
    group: "{{ icinga2_group[ansible_os_family] }}"
    state: directory
  when:
    - icinga_agent_repositoryd_directory is defined

- name: create features-* folders in case it is missing
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: 0750
    owner: "{{ icinga2_user[ansible_os_family] }}"
    group: "{{ icinga2_group[ansible_os_family] }}"
  loop:
    - /etc/icinga2/features-available/
    - /etc/icinga2/features-enabled/

- name: copy icinga configuration files
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "/etc/icinga2/{{ item | basename | regex_replace('.j2', '') }}"
    owner: "{{ icinga2_user[ansible_os_family] }}"
    group: "{{ icinga2_group[ansible_os_family] }}"
    mode: 0640
  with_fileglob:
    - "../templates/configuration/*"
  notify:
    - restart icinga2-agent

- name: copy icinga feature files
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "/etc/icinga2/features-available/{{ item | basename | regex_replace('.j2', '') }}"
    owner: "{{ icinga2_user[ansible_os_family] }}"
    group: "{{ icinga2_group[ansible_os_family] }}"
    mode: 0640
  with_fileglob:
    - "../templates/features/*"
  notify:
    - restart icinga2-agent

- name: copy custom icinga feature files
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "/etc/icinga2/features-available/{{ item | basename | regex_replace('.j2', '') }}"
    owner: "{{ icinga2_user[ansible_os_family] }}"
    group: "{{ icinga2_group[ansible_os_family] }}"
    mode: 0640
  with_fileglob:
    - "{{ icinga_agent_custom_features_template_path }}"
  notify:
    - restart icinga2-agent
  when:
    - icinga_agent_custom_features_template_path is defined
    - icinga_agent_custom_features_template_path | length > 0

- name: activate specified icinga features
  ansible.builtin.file:
    src: "../features-available/{{ item }}"
    dest: "/etc/icinga2/features-enabled/{{ item }}"
    state: link
  with_items:
    - "{{ icinga_agent_enable_features }}"
  when:
    - icinga_agent_enable_features is defined
    - icinga_agent_enable_features | length > 0

- name: start icinga agent registration
  block:
    - name: create certs folder in case it is missing
      ansible.builtin.file:
        path: /var/lib/icinga2/certs/
        state: directory
        mode: 0750
        owner: "{{ icinga2_user[ansible_os_family] }}"
        group: "{{ icinga2_group[ansible_os_family] }}"

    - name: generate ticket and save it as a variable
      ansible.builtin.command: >
        /usr/sbin/icinga2 pki ticket --cn {{ ansible_hostname }} --salt {{ icinga_agent_salt }}
      environment:
        LD_LIBRARY_PATH: "/usr/lib64"
      register: ticket
      changed_when: false
      failed_when: ticket.rc != 0

    - name: create certificate
      ansible.builtin.command: >
        /usr/sbin/icinga2 pki new-cert --cn {{ ansible_hostname }}
        --key /var/lib/icinga2/certs/{{ ansible_hostname }}.key
        --cert /var/lib/icinga2/certs/{{ ansible_hostname }}.crt
      args:
        creates: "/var/lib/icinga2/certs/{{ ansible_hostname }}.crt"

    - name: save the icinga master's certificate to the host
      ansible.builtin.command: >
        /usr/sbin/icinga2 pki save-cert --key /var/lib/icinga2/certs/{{ ansible_hostname }}.key
        --cert /var/lib/icinga2/certs/{{ ansible_hostname }}.crt
        --trustedcert /var/lib/icinga2/certs/trusted-master.crt
        --host {{ icinga_agent_ca_host }}
      args:
        creates: "/var/lib/icinga2/certs/trusted-master.crt"

    - name: send a pki request to the icinga master
      ansible.builtin.command: >
        /usr/sbin/icinga2 pki request --host {{ icinga_agent_ca_host }}
        --port {{ icinga_agent_ca_host_icinga_port }}
        --ticket {{ ticket.stdout }} --key /var/lib/icinga2/certs/{{ ansible_hostname }}.key
        --cert /var/lib/icinga2/certs/{{ ansible_hostname }}.crt
        --trustedcert /var/lib/icinga2/certs/trusted-master.crt --ca /var/lib/icinga2/certs/ca.crt
      args:
        creates: "/var/lib/icinga2/certs/ca.crt"
      notify:
        - restart icinga2-agent
  when:
    - icinga_agent_registration | bool
    - icinga_agent_salt is defined
    - icinga_agent_ca_host is defined
    - icinga_agent_ca_host | length > 0

- name: enable autostart for icinga service
  ansible.builtin.service:
    name: icinga2
    enabled: true
    state: started
